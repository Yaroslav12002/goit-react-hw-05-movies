{"version":3,"file":"static/js/44.71e76857.chunk.js","mappings":"8RAEaA,EAAUC,EAAAA,GAAAA,IAAH,wDAKPC,EAAqBD,EAAAA,GAAAA,IAAH,2D,oBCJlBE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,4F,SCCVI,EAAS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC3B,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,IACCC,IAGN,ECJKC,EAAQ,SAAAC,GACZ,GAAKA,EAOL,OAJ2BA,EAAOC,KAAI,YACpC,OADkD,EAAXC,IAExC,IAEyBC,KAAK,KAChC,EA6DD,EA3DqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAW7C,IATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMC,GAAN,wFACOC,EAAAA,EAAAA,IAAaD,GADpB,OACdE,EADc,OAEpBT,EAASS,GAFW,2CAAH,sDAKnBH,EAAcV,EACf,GAAE,CAACA,IAECG,EAAL,CAIA,IAAQW,EAA6CX,EAA7CW,MAAOC,EAAsCZ,EAAtCY,SAAUnB,EAA4BO,EAA5BP,OAAQoB,EAAoBb,EAApBa,YAAaC,EAAOd,EAAPc,GACxCC,EAAMF,EAAW,yCACeA,GAClCG,EAEJ,OACE,iCACE,SAAC3B,EAAD,CAAQC,GAAIY,EAAZ,sBACA,UAAClB,EAAD,YACE,SAACE,EAAD,CAAoB+B,IAAKF,KACzB,4BACE,wBAAKJ,KACL,sCACA,uBAAIC,KACJ,oCACA,uBAAIpB,EAAMC,YAGd,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASH,GAAG,OAAOc,MAAO,CAAEC,KAAMH,GAAgBY,GAAIA,EAAtD,qBAIF,yBACE,SAAC,KAAD,CAASxB,GAAG,UAAUc,MAAO,CAAEC,KAAMH,GAAgBY,GAAIA,EAAzD,2BAKJ,SAAC,EAAAI,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,WAnCP,CAwCF,C,kMCvEDC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,WAAOC,EAAUC,GAAjB,gFACdf,EAAQ,GACRe,IACFf,EAAK,iBAAae,IAHF,kBAMOH,EAAAA,EAAAA,IAAA,UAAaE,EAAb,oBAVX,oCAUW,OAA2Cd,IANlD,cAMVgB,EANU,yBAOTA,EAASC,MAPA,gCAShB,IAAIC,MAAM,aATM,yDAAH,wDAaJC,EAAkB,WAE7B,OAAON,EADM,sBACY,GAC1B,EAEYO,EAAmB,SAAAL,GAE9B,OAAOF,EADM,gBACYE,EAC1B,EAEYd,EAAe,SAAAK,GAC1B,IAAMe,EAAI,iBAAaf,GACvB,OAAOO,EAAYQ,EACpB,EAEYC,EAAe,SAAAhB,GAC1B,IAAMe,EAAI,iBAAaf,EAAb,YACV,OAAOO,EAAYQ,EACpB,EAEYE,EAAiB,SAAAjB,GAC5B,IAAMe,EAAI,iBAAaf,EAAb,YACV,OAAOO,EAAYQ,EACpB,C","sources":["pages/MovieDetails.styled.js","components/GoBack/GoBack.styled.js","components/GoBack/GoBack.jsx","pages/MovieDetails.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const PosterMovieDetails = styled.img`\n  width: 250px;\n  height: 375px;\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  padding: 10px 10px;\n  text-decoration: none;\n`;\n","import PropTypes from 'prop-types';\nimport { HiArrowLeft } from 'react-icons/hi';\nimport { StyledLink } from './GoBack.styled';\n\nexport const GoBack = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft />\n      {children}\n    </StyledLink>\n  );\n};\n\nGoBack.propTypes = {\n  to: PropTypes.object,\n  children: PropTypes.string,\n};\n","import { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getMovieById } from 'services/moviesAPI';\nimport { Wrapper, PosterMovieDetails } from './MovieDetails.styled';\nimport placeholder from '../images/no-image-placeholder.png';\nimport { GoBack } from 'components/GoBack/GoBack';\n\nconst genre = genres => {\n  if (!genres) {\n    return;\n  }\n  const onlyNameFromGenres = genres.map(({ name }) => {\n    return name;\n  });\n\n  return onlyNameFromGenres.join(', ');\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const loadMovieById = async query => {\n      const responseData = await getMovieById(query);\n      setMovie(responseData);\n    };\n\n    loadMovieById(movieId);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const { title, overview, genres, poster_path, id } = movie;\n  const url = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : placeholder;\n\n  return (\n    <>\n      <GoBack to={backLinkHref}>Go back</GoBack>\n      <Wrapper>\n        <PosterMovieDetails src={url} />\n        <div>\n          <h1>{title}</h1>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genre(genres)}</p>\n        </div>\n      </Wrapper>\n      <div>\n        <h2>Additional information</h2>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={{ from: backLinkHref }} id={id}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: backLinkHref }} id={id}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'b2b9595202d4f988a1c6d3c8319aadf9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (endpoint, param) => {\n  let query = '';\n  if (param) {\n    query = `&query=${param}`;\n  }\n  try {\n    const response = await axios.get(`${endpoint}?api_key=${API_KEY}${query}`);\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n};\n\nexport const getMoviesTrends = () => {\n  const path = '/trending/movie/day';\n  return fetchMovies(path, '');\n};\n\nexport const getMoviesByQuery = param => {\n  const path = '/search/movie';\n  return fetchMovies(path, param);\n};\n\nexport const getMovieById = id => {\n  const path = `/movie/${id}`;\n  return fetchMovies(path);\n};\n\nexport const getMovieCast = id => {\n  const path = `/movie/${id}/credits`;\n  return fetchMovies(path);\n};\n\nexport const getMovieReview = id => {\n  const path = `/movie/${id}/reviews`;\n  return fetchMovies(path);\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n"],"names":["Wrapper","styled","PosterMovieDetails","StyledLink","Link","GoBack","to","children","genre","genres","map","name","join","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","loadMovieById","query","getMovieById","responseData","title","overview","poster_path","id","url","placeholder","src","Suspense","fallback","axios","fetchMovies","endpoint","param","response","data","Error","getMoviesTrends","getMoviesByQuery","path","getMovieCast","getMovieReview"],"sourceRoot":""}