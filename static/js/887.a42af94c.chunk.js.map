{"version":3,"file":"static/js/887.a42af94c.chunk.js","mappings":"+QAGaA,EAAW,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,UACpC,OACE,4BACE,gBACEC,IAAKF,EACLG,IAAKJ,EACLK,MAAM,QACNC,QAAS,YAAwB,IAArBC,EAAoB,EAApBA,cACVA,EAAcC,QAAU,KACxBD,EAAcJ,IAAMM,CACrB,KAEH,uBAAIT,KACJ,uCAAeE,OAGpB,ECsBD,EAnCa,WACX,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,IATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMC,GAAN,wFACOC,EAAAA,EAAAA,IAAaD,GADpB,OACdE,EADc,OAEpBL,EAAQK,GAFY,2CAAH,sDAKnBH,EAAcN,EACf,GAAE,CAACA,IAEA,OAACG,QAAD,IAACA,GAAAA,EAAMA,KAIX,OAA0B,KAAlB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMA,KAAKO,SACN,mDAGP,yBACGP,EAAKA,KAAKQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcvB,EAAsB,EAAtBA,KAAME,EAAgB,EAAhBA,UAClCsB,EAASD,EAAY,yCACWA,GAClCd,EAEJ,OACE,SAACV,EAAD,CAAmBC,KAAMA,EAAMC,IAAKuB,EAAQtB,UAAWA,GAAxCoB,EAElB,KAGN,C,kMCnCDG,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAW,mCAAG,WAAOC,EAAUC,GAAjB,gFACdX,EAAQ,GACRW,IACFX,EAAK,iBAAaW,IAHF,kBAMOH,EAAAA,EAAAA,IAAA,UAAaE,EAAb,oBAVX,oCAUW,OAA2CV,IANlD,cAMVY,EANU,yBAOTA,EAASC,MAPA,gCAShB,IAAIC,MAAM,aATM,yDAAH,wDAaJC,EAAkB,WAE7B,OAAON,EADM,sBACY,GAC1B,EAEYO,EAAmB,SAAAL,GAE9B,OAAOF,EADM,gBACYE,EAC1B,EAEYM,EAAe,SAAAZ,GAC1B,IAAMa,EAAI,iBAAab,GACvB,OAAOI,EAAYS,EACpB,EAEYjB,EAAe,SAAAI,GAC1B,IAAMa,EAAI,iBAAab,EAAb,YACV,OAAOI,EAAYS,EACpB,EAEYC,EAAiB,SAAAd,GAC5B,IAAMa,EAAI,iBAAab,EAAb,YACV,OAAOI,EAAYS,EACpB,C","sources":["components/CastItem/CastItem.jsx","components/Cast/Cast.jsx","services/moviesAPI.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport placeholder from '../../images/no-image-placeholder.png';\n\nexport const CastItem = ({ name, url, character }) => {\n  return (\n    <div>\n      <img\n        src={url}\n        alt={name}\n        width=\"100px\"\n        onError={({ currentTarget }) => {\n          currentTarget.onerror = null;\n          currentTarget.src = placeholder;\n        }}\n      ></img>\n      <p>{name}</p>\n      <p>character: {character}</p>\n    </div>\n  );\n};\n\nCastItem.propTypes = {\n  name: PropTypes.string,\n  url: PropTypes.string,\n  character: PropTypes.string,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from 'services/moviesAPI';\nimport { CastItem } from 'components/CastItem/CastItem';\nimport placeholder from '../../images/no-image-placeholder.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const loadMovieCast = async query => {\n      const responseData = await getMovieCast(query);\n      setCast(responseData);\n    };\n\n    loadMovieCast(movieId);\n  }, [movieId]);\n\n  if (!cast?.cast) {\n    return;\n  }\n\n  if (cast?.cast.length === 0) {\n    return <div>No cast üò•</div>;\n  }\n  return (\n    <div>\n      {cast.cast.map(({ id, profile_path, name, character }) => {\n        const imgUrl = profile_path\n          ? `https://image.tmdb.org/t/p/w500${profile_path}`\n          : placeholder;\n\n        return (\n          <CastItem key={id} name={name} url={imgUrl} character={character} />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = 'b2b9595202d4f988a1c6d3c8319aadf9';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst fetchMovies = async (endpoint, param) => {\n  let query = '';\n  if (param) {\n    query = `&query=${param}`;\n  }\n  try {\n    const response = await axios.get(`${endpoint}?api_key=${API_KEY}${query}`);\n    return response.data;\n  } catch (error) {\n    new Error('Not Found');\n  }\n};\n\nexport const getMoviesTrends = () => {\n  const path = '/trending/movie/day';\n  return fetchMovies(path, '');\n};\n\nexport const getMoviesByQuery = param => {\n  const path = '/search/movie';\n  return fetchMovies(path, param);\n};\n\nexport const getMovieById = id => {\n  const path = `/movie/${id}`;\n  return fetchMovies(path);\n};\n\nexport const getMovieCast = id => {\n  const path = `/movie/${id}/credits`;\n  return fetchMovies(path);\n};\n\nexport const getMovieReview = id => {\n  const path = `/movie/${id}/reviews`;\n  return fetchMovies(path);\n};\n\n// /trending/get-trending —Å–ø–∏—Å–æ–∫ –Ω–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤ –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó –Ω–∞ –≥–æ–ª–æ–≤–Ω—ñ–π —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ.\n// /search/search-movies –ø–æ—à—É–∫ —Ñ—ñ–ª—å–º—É –∑–∞ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Ñ—ñ–ª—å–º—ñ–≤.\n// /movies/get-movie-details –∑–∞–ø–∏—Ç –ø–æ–≤–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ñ—ñ–ª—å–º –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫—ñ–Ω–æ—Ñ—ñ–ª—å–º—É.\n// /movies/get-movie-credits –∑–∞–ø–∏—Ç —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∞–∫—Ç–æ—Ä—Å—å–∫–∏–π —Å–∫–ª–∞–¥ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫—ñ–Ω–æ—Ñ—ñ–ª—å–º—É.\n// /movies/get-movie-reviews –∑–∞–ø–∏—Ç –æ–≥–ª—è–¥—ñ–≤ –¥–ª—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫—ñ–Ω–æ—Ñ—ñ–ª—å–º—É.\n"],"names":["CastItem","name","url","character","src","alt","width","onError","currentTarget","onerror","placeholder","movieId","useParams","useState","cast","setCast","useEffect","loadMovieCast","query","getMovieCast","responseData","length","map","id","profile_path","imgUrl","axios","fetchMovies","endpoint","param","response","data","Error","getMoviesTrends","getMoviesByQuery","getMovieById","path","getMovieReview"],"sourceRoot":""}